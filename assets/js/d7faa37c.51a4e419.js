"use strict";(self.webpackChunkswizzin_website=self.webpackChunkswizzin_website||[]).push([[5357,865],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return b}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(b,l(l({ref:t},c),{},{components:n})):a.createElement(b,l({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},425:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(7294),r=n(6010),o="tabItem_Ymn6";function l(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},4259:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(7462),r=n(7294),o=n(6010),l=n(1048),i=n(3609),s=n(1943),u=n(2957),c="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,n,l=e.lazy,p=e.block,m=e.defaultValue,b=e.values,f=e.groupId,v=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=b?b:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,i.l)(h,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===m?m:null!=(t=null!=m?m:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:k[0].props.value;if(null!==g&&!h.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),N=w.tabGroupChoices,T=w.setTabGroupChoices,x=(0,r.useState)(g),C=x[0],O=x[1],S=[],I=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var Z=N[f];null!=Z&&Z!==C&&h.some((function(e){return e.value===Z}))&&O(Z)}var E=function(e){var t=e.currentTarget,n=S.indexOf(t),a=h[n].value;a!==C&&(I(t),O(a),null!=f&&T(f,String(a)))},A=function(e){var t,n=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":var a,r=S.indexOf(e.currentTarget)+1;n=null!=(a=S[r])?a:S[0];break;case"ArrowLeft":var o,l=S.indexOf(e.currentTarget)-1;n=null!=(o=S[l])?o:S[S.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},v)},h.map((function(e){var t=e.value,n=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return S.push(e)},onKeyDown:A,onClick:E},l,{className:(0,o.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),l?(0,r.cloneElement)(k.filter((function(e){return e.props.value===C}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function m(e){var t=(0,l.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},7925:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(4137)),l=n(9124),i=["components"],s={id:"autobrr",title:"Autobrr",sidebar_label:"Autobrr"},u=void 0,c={unversionedId:"applications/autobrr",id:"applications/autobrr",title:"Autobrr",description:"A powerful modern autodl alternative, which monitors IRC announce channels to get releases as soon as they are available and send to your favorite client or to arr's and let them decide to download or not.",source:"@site/docs/applications/autobrr.mdx",sourceDirName:"applications",slug:"/applications/autobrr",permalink:"/applications/autobrr",draft:!1,editUrl:"https://github.com/liaralabs/docs.swizzin.ltd/edit/master/docs/applications/autobrr.mdx",tags:[],version:"current",frontMatter:{id:"autobrr",title:"Autobrr",sidebar_label:"Autobrr"},sidebar:"docs",previous:{title:"Applications Index",permalink:"/applications/"},next:{title:"Autodl",permalink:"/applications/autodl"}},d={},p=[{value:"Initial Setup",id:"initial-setup",level:2},{value:"Upgrade",id:"upgrade",level:2},{value:"How to Access",id:"how-to-access",level:2},{value:"Service Management",id:"service-management",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Connecting to a Remote qBittorrent (Swizzin) Instance",id:"connecting-to-a-remote-qbittorrent-swizzin-instance",level:3}],m={toc:p};function b(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A powerful modern autodl alternative, which monitors IRC announce channels to get releases as soon as they are available and send to your favorite client or to arr's and let them decide to download or not."),(0,o.kt)("p",null,"Supported actions/clients:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"qBittorrent"),(0,o.kt)("li",{parentName:"ul"},"Deluge"),(0,o.kt)("li",{parentName:"ul"},"Radarr"),(0,o.kt)("li",{parentName:"ul"},"Sonarr"),(0,o.kt)("li",{parentName:"ul"},"Lidarr"),(0,o.kt)("li",{parentName:"ul"},"Save to watch folder"),(0,o.kt)("li",{parentName:"ul"},"Run custom commands")),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Autobrr is in the early stages of development and is considered alpha/beta.\nInstall and use with caution.")),(0,o.kt)("h2",{id:"initial-setup"},"Initial Setup"),(0,o.kt)("p",null,"Installing autobrr is easy. Simply issue the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"main",main:!0},"sudo box install autobrr\n")),(0,o.kt)("p",null,"This command will configure autobrr for your user."),(0,o.kt)("h2",{id:"upgrade"},"Upgrade"),(0,o.kt)("p",null,"Upgrading autobrr is as easy. Simply issue the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"main",main:!0},"sudo box upgrade autobrr\n")),(0,o.kt)("h2",{id:"how-to-access"},"How to Access"),(0,o.kt)("p",null,"After autobrr has been installed, it will be available for access at ",(0,o.kt)("inlineCode",{parentName:"p"},"https://<hostname.ltd>/autobrr"),"."),(0,o.kt)("p",null,"The port is randomized at setup, so if you don't use ",(0,o.kt)("inlineCode",{parentName:"p"},"nginx"),", or just need to find the port, check in ",(0,o.kt)("inlineCode",{parentName:"p"},"/home/user/.config/autobrr/config.toml"),"."),(0,o.kt)("h2",{id:"service-management"},"Service Management"),(0,o.kt)("p",null,"Multi-user is enabled, so in order to manipulate the service, you'll also need to specify a username."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/etc/systemd/system/autobrr@.service\n")),(0,o.kt)(l.default,{service:"autobrr@<username>",mdxType:"SystemdTabs"}),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"In order to get autobrr working, you need to do the following steps:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Setup indexers",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Go to ",(0,o.kt)("inlineCode",{parentName:"li"},"Settings/Indexers")," and add indexers"))),(0,o.kt)("li",{parentName:"ul"},"Setup irc",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Go to ",(0,o.kt)("inlineCode",{parentName:"li"},"Settings/Irc")," and add networks and channels."))),(0,o.kt)("li",{parentName:"ul"},"Setup download clients",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Go to ",(0,o.kt)("inlineCode",{parentName:"li"},"Settings/Clients")," and add your download clients."))),(0,o.kt)("li",{parentName:"ul"},"Add filters",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"They work similar to autodl-irssi filters.")))),(0,o.kt)("h2",{id:"advanced-configuration"},"Advanced Configuration"),(0,o.kt)("h3",{id:"connecting-to-a-remote-qbittorrent-swizzin-instance"},"Connecting to a Remote qBittorrent (Swizzin) Instance"),(0,o.kt)("p",null,"Go to ",(0,o.kt)("inlineCode",{parentName:"p"},"Settings/Clients")," and add your download client, then enter the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"host: https://xxx.domain.ltd/qbittorrent\nport: 0 (field will disappear)\ntls: true\nusername: user\npassword: pass\nBasic auth: true\nuser: basic user (same as user)\npass: basic pass (same as pass)\n")))}b.isMDXComponent=!0},9124:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return v},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return b}});var a=n(7462),r=n(3366),o=(n(7294),n(4137)),l=n(4259),i=n(425),s=n(9319),u=["components"],c={},d=void 0,p={unversionedId:"snippets/systemdtabs",id:"snippets/systemdtabs",title:"systemdtabs",description:"<Tabs",source:"@site/docs/snippets/systemdtabs.mdx",sourceDirName:"snippets",slug:"/snippets/systemdtabs",permalink:"/snippets/systemdtabs",draft:!1,editUrl:"https://github.com/liaralabs/docs.swizzin.ltd/edit/master/docs/snippets/systemdtabs.mdx",tags:[],version:"current",frontMatter:{}},m={},b=[],f={toc:b};function v(e){var t=e.components,n=(0,r.Z)(e,u);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"code"},(0,o.kt)(l.Z,{defaultValue:"start",values:[{label:"Status",value:"status"},{label:"Start",value:"start"},{label:"Stop",value:"stop"},{label:"Restart",value:"restart"},{label:"Enable",value:"enable"},{label:"Disable",value:"disable"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"status",mdxType:"TabItem"},(0,o.kt)(s.Z,{children:"sudo systemctl status "+n.service,className:"bash",mdxType:"CodeBlock"})),(0,o.kt)(i.Z,{value:"start",mdxType:"TabItem"},(0,o.kt)(s.Z,{children:"sudo systemctl start "+n.service,className:"bash",mdxType:"CodeBlock"})),(0,o.kt)(i.Z,{value:"stop",mdxType:"TabItem"},(0,o.kt)(s.Z,{children:"sudo systemctl stop "+n.service,className:"bash",mdxType:"CodeBlock"})),(0,o.kt)(i.Z,{value:"restart",mdxType:"TabItem"},(0,o.kt)(s.Z,{children:"sudo systemctl restart "+n.service,className:"bash",mdxType:"CodeBlock"})),(0,o.kt)(i.Z,{value:"enable",mdxType:"TabItem"},(0,o.kt)(s.Z,{children:"sudo systemctl enable "+n.service,className:"bash",mdxType:"CodeBlock"})),(0,o.kt)(i.Z,{value:"disable",mdxType:"TabItem"},(0,o.kt)(s.Z,{children:"sudo systemctl disable "+n.service,className:"bash",mdxType:"CodeBlock"})))))}v.isMDXComponent=!0}}]);